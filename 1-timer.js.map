{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate && userSelectedDate > new Date()) {\n      document.querySelector('[data-start]').disabled = false;\n    } else {\n      iziToast.error({ title: 'Error', message: 'Please choose a date in the future' });\n      document.querySelector('[data-start]').disabled = true;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer() {\n  const now = new Date();\n  const timeLeft = userSelectedDate - now;\n\n  if (timeLeft <= 0) {\n    clearInterval(timerInterval);\n    document.querySelector('[data-start]').disabled = true;\n    document.querySelector('#datetime-picker').disabled = false;\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeLeft);\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\ndocument.querySelector('[data-start]').addEventListener('click', () => {\n  document.querySelector('[data-start]').disabled = true;\n  document.querySelector('#datetime-picker').disabled = true;\n  timerInterval = setInterval(updateTimer, 1000);\n});"],"names":["userSelectedDate","timerInterval","options","selectedDates","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimer","timeLeft"],"mappings":"+IAKA,IAAIA,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoBA,EAAmB,IAAI,KAC7C,SAAS,cAAc,cAAc,EAAE,SAAW,IAElDI,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChF,SAAS,cAAc,cAAc,EAAE,SAAW,GAErD,CACH,EAEAC,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,GAAc,CAErB,MAAMC,EAAWf,EADL,IAAI,KAGhB,GAAIe,GAAY,EAAG,CACjB,cAAcd,CAAa,EAC3B,SAAS,cAAc,cAAc,EAAE,SAAW,GAClD,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtD,MACD,CAED,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAQ,EAC5D,SAAS,cAAc,aAAa,EAAE,YAAcT,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,CAC/E,CAEA,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CACrE,SAAS,cAAc,cAAc,EAAE,SAAW,GAClD,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtDZ,EAAgB,YAAYa,EAAa,GAAI,CAC/C,CAAC"}